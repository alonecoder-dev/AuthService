# ===============================================
# = DATASOURCE
# ===============================================
# Database connection URL. Connects to a local MySQL server on port 3306 and a database named "authservice".
spring.datasource.url=jdbc:mysql://localhost:3306/authservice?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
# Database username. 'root' is a common default for local MySQL.
spring.datasource.username=root
# Database password. Change '0000' to your actual MySQL root password.
spring.datasource.password=0000
# The driver for MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================================
# = JPA / HIBERNATE
# ===============================================
# When the application starts, it will drop and then re-create the database schema.
# This is useful for development but should NOT be used in production.
spring.jpa.hibernate.ddl-auto=create
# This tells Hibernate which version of SQL to use.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# This will print the SQL queries generated by Hibernate to the console, which is great for debugging.
spring.jpa.show-sql=true

# ===============================================
# = SERVER
# ===============================================
# The port your application will run on.
server.port=9898

# ===============================================
# = LOGGING
# ===============================================
# Set logging level to DEBUG for Spring Security to see detailed security-related messages.
logging.level.org.springframework.security=DEBUG


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.authservice.serializer.UserInfoSerializer
spring.kafka.topic-json.name= user_service
spring.kafka.producer.properties.spring.json.type.mapping=auth:authservice.model.UserInfoDto
spring.kafka.producer.properties.spring.json.add.type.headers=true



